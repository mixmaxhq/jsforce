{"version":3,"sources":["node_modules/browser-pack/_prelude.js","jsforce-api-metadata.min.js","lib/api/metadata.js","node_modules/base64-js/index.js","node_modules/browserify/node_modules/buffer/index.js","node_modules/ieee754/index.js","node_modules/isarray/index.js","node_modules/process/browser.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","jsforce","modules","api","Metadata","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","process","Buffer","inherits","events","stream","_","Promise","SOAP","conn","_conn","convertToSaveResult","result","saveResult","clone","success","convertToUpsertResult","upsertResult","created","convertToMetadataInfo","rec","metadataInfo","$","prototype","pollInterval","pollTimeout","_invoke","method","message","callback","xmlns","endpointUrl","instanceUrl","version","invoke","then","res","thenCall","createAsync","type","metadata","Number","convert","md","isArray","map","AsyncResultLocator","createSync","create","results","readSync","read","fullNames","records","updateAsync","updateMetadata","umd","updateSync","update","upsertSync","upsert","deleteAsync","isString","fullName","del","deleteSync","rename","oldFullName","newFullName","checkStatus","ids","asyncProcessId","describe","asOfVersion","metadataObjects","mo","childXmlNames","inFolder","metaFile","partialSaveAllowed","testRequired","list","queries","retrieve","request","RetrieveResultLocator","checkRetrieveStatus","id","deploy","zipInput","options","isFunction","deferred","defer","isObject","pipe","bufs","on","d","push","resolve","concat","toString","String","promise","zipContentB64","ZipFile","DeployOptions","DeployResultLocator","checkDeployStatus","includeDetails","isBoolean","done","checkOnly","ignoreWarnings","rollbackOnError","numberComponentErrors","numberComponentsDeployed","numberComponentsTotal","numberTestErrors","numberTestsCompleted","numberTestsTotal","meta","_meta","_results","_isArray","EventEmitter","onResolve","onReject","convertType","nextTick","err","check","_ids","poll","interval","timeout","startTime","Date","getTime","now","errMsg","emit","resultArr","len","setTimeout","complete","reject","super_","resultStream","Readable","reading","_read","zipFile","_process","buffer","2","byteLength","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","arr","Arr","_byteLength","curByte","revLookup","charCodeAt","fromByteArray","uint8","extraBytes","parts","len2","encodeChunk","lookup","join","Uint8Array","Array","indexOf","start","end","num","output","3","base64","ieee754","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","__proto__","arg","encodingOrOffset","allocUnsafe","from","value","TypeError","ArrayBuffer","array","byteOffset","undefined","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","write","slice","fromString","obj","isBuffer","checked","copy","val","data","fromObject","assertSize","size","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","b","m","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","buf","readUInt16BE","foundIndex","found","j","hexWrite","offset","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","Math","min","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","fromCharCode","apply","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","typedArraySupport","poolSize","_augment","Symbol","species","Object","defineProperty","configurable","fill","allocUnsafeSlow","_isBuffer","compare","x","y","pos","swap16","swap32","swap64","arguments","equals","inspect","max","match","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","INVALID_BASE64_RE","Infinity","leadSurrogate","trim","replace","stringtrim","base64clean","src","dst","base64-js","isarray","4","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","s","NaN","rt","abs","log","LN2","5","6","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","run","marker","runClearTimeout","Item","noop","args","title","browser","env","argv","versions","addListener","once","off","removeListener","removeAllListeners","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","umask"],"mappings":"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","file":"jsforce-api-metadata.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","!function(t){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=t();else if(\"function\"==typeof define&&define.amd)define([],t);else{var e;(e=(e=(e=(e=\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this).jsforce||(e.jsforce={})).modules||(e.modules={})).api||(e.api={})).Metadata=t()}}((function(){return function t(e,r,n){function o(u,s){if(!r[u]){if(!e[u]){var a=\"function\"==typeof require&&require;if(!s&&a)return a(u,!0);if(i)return i(u,!0);var f=new Error(\"Cannot find module '\"+u+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var h=r[u]={exports:{}};e[u][0].call(h.exports,(function(t){return o(e[u][1][t]||t)}),h,h.exports,t,e,r,n)}return r[u].exports}for(var i=\"function\"==typeof require&&require,u=0;u<n.length;u++)o(n[u]);return o}({1:[function(t,e,r){(function(t,r){\"use strict\";var n=window.jsforce.require(\"inherits\"),o=window.jsforce.require(\"events\"),i=window.jsforce.require(\"readable-stream\"),u=window.jsforce.require(\"lodash/core\"),s=window.jsforce.require(\"./core\"),a=window.jsforce.require(\"./promise\"),f=window.jsforce.require(\"./soap\"),h=e.exports=function(t){this._conn=t};function c(t){var e=u.clone(t);return e.success=\"true\"===e.success,e}function l(t){var e=c(t);return e.created=\"true\"===e.created,e}function p(t){var e=u.clone(t);return delete e.$,e}h.prototype.pollInterval=1e3,h.prototype.pollTimeout=1e4,h.prototype._invoke=function(t,e,r){return new f(this._conn,{xmlns:\"http://soap.sforce.com/2006/04/metadata\",endpointUrl:this._conn.instanceUrl+\"/services/Soap/m/\"+this._conn.version}).invoke(t,e).then((function(t){return t.result})).thenCall(r)},h.prototype.createAsync=function(t,e,r){if(Number(this._conn.version)>30)throw new Error(\"Async metadata CRUD calls are not supported on ver 31.0 or later.\");var n=function(e){return e[\"@xsi:type\"]=t,e},o=u.isArray(e);e=o?u.map(e,n):n(e);var i=this._invoke(\"create\",{metadata:e});return new y(this,i,o).thenCall(r)},h.prototype.createSync=h.prototype.create=function(t,e,r){var n=function(e){return e[\"@xsi:type\"]=t,e};return e=u.isArray(e)?u.map(e,n):n(e),this._invoke(\"createMetadata\",{metadata:e}).then((function(t){return u.isArray(t)?u.map(t,c):c(t)})).thenCall(r)},h.prototype.readSync=h.prototype.read=function(t,e,r){return this._invoke(\"readMetadata\",{type:t,fullNames:e}).then((function(t){return u.isArray(t.records)?u.map(t.records,p):p(t.records)})).thenCall(r)},h.prototype.updateAsync=function(t,e,r){if(Number(this._conn.version)>30)throw new Error(\"Async metadata CRUD calls are not supported on ver 31.0 or later.\");var n=function(e){return e.metadata[\"@xsi:type\"]=t,e},o=u.isArray(e);e=o?u.map(e,n):n(e);var i=this._invoke(\"update\",{updateMetadata:e});return new y(this,i,o).thenCall(r)},h.prototype.updateSync=h.prototype.update=function(t,e,r){var n=function(e){return e[\"@xsi:type\"]=t,e};return e=u.isArray(e)?u.map(e,n):n(e),this._invoke(\"updateMetadata\",{metadata:e}).then((function(t){return u.isArray(t)?u.map(t,c):c(t)})).thenCall(r)},h.prototype.upsertSync=h.prototype.upsert=function(t,e,r){var n=function(e){return e[\"@xsi:type\"]=t,e};return e=u.isArray(e)?u.map(e,n):n(e),this._invoke(\"upsertMetadata\",{metadata:e}).then((function(t){return u.isArray(t)?u.map(t,l):l(t)})).thenCall(r)},h.prototype.deleteAsync=function(t,e,r){if(Number(this._conn.version)>30)throw new Error(\"Async metadata CRUD calls are not supported on ver 31.0 or later.\");var n=function(e){return u.isString(e)&&(e={fullName:e}),e[\"@xsi:type\"]=t,e},o=u.isArray(e);e=o?u.map(e,n):n(e);var i=this._invoke(\"delete\",{metadata:e});return new y(this,i,o).thenCall(r)},h.prototype.del=h.prototype.deleteSync=h.prototype.delete=function(t,e,r){return this._invoke(\"deleteMetadata\",{type:t,fullNames:e}).then((function(t){return u.isArray(t)?u.map(t,c):c(t)})).thenCall(r)},h.prototype.rename=function(t,e,r,n){return this._invoke(\"renameMetadata\",{type:t,oldFullName:e,newFullName:r}).then((function(t){return c(t)})).thenCall(n)},h.prototype.checkStatus=function(t,e){var r=u.isArray(t),n=this._invoke(\"checkStatus\",{asyncProcessId:t});return new y(this,n,r).thenCall(e)},h.prototype.describe=function(t,e){return u.isString(t)||(e=t,t=this._conn.version),this._invoke(\"describeMetadata\",{asOfVersion:t}).then((function(t){return t.metadataObjects=u.isArray(t.metadataObjects)?t.metadataObjects:[t.metadataObjects],t.metadataObjects=u.map(t.metadataObjects,(function(t){return t.childXmlNames&&(t.childXmlNames=u.isArray(t.childXmlNames)?t.childXmlNames:[t.childXmlNames]),t.inFolder=\"true\"===t.inFolder,t.metaFile=\"true\"===t.metaFile,t})),t.partialSaveAllowed=\"true\"===t.partialSaveAllowed,t.testRequired=\"true\"===t.testRequired,t})).thenCall(e)},h.prototype.list=function(t,e,r){return u.isString(e)||(r=e,e=this._conn.version),u.isArray(t)||(t=[t]),this._invoke(\"listMetadata\",{queries:t,asOfVersion:e},r)},h.prototype.retrieve=function(t,e){var r=this._invoke(\"retrieve\",{request:t});return new d(this,r).thenCall(e)},h.prototype.checkRetrieveStatus=function(t,e){return this._invoke(\"checkRetrieveStatus\",{asyncProcessId:t},e)},h.prototype.deploy=function(t,e,n){e&&!u.isFunction(e)||(n=e,e={});var o=a.defer();if(u.isObject(t)&&u.isFunction(t.pipe)){var i=[];t.on(\"data\",(function(t){i.push(t)})),t.on(\"end\",(function(){o.resolve(r.concat(i).toString(\"base64\"))}))}else if(t instanceof r)o.resolve(t.toString(\"base64\"));else{if(!(t instanceof String||\"string\"==typeof t))throw\"Unexpected zipInput type\";o.resolve(t)}var s=this,f=o.promise.then((function(t){return s._invoke(\"deploy\",{ZipFile:t,DeployOptions:e},n)}));return new g(this,f).thenCall(n)},h.prototype.checkDeployStatus=function(t,e,r){return u.isObject(e)||u.isBoolean(e)?e=!!e:(r=e,e=!1),this._invoke(\"checkDeployStatus\",{asyncProcessId:t,includeDetails:e}).then((function(t){return t.done=\"true\"===t.done,t.success=\"true\"===t.success,t.checkOnly=\"true\"===t.checkOnly,t.ignoreWarnings&&(t.ignoreWarnings=\"true\"===t.ignoreWarnings),t.rollbackOnError&&(t.rollbackOnError=\"true\"===t.rollbackOnError),t.numberComponentErrors=Number(t.numberComponentErrors),t.numberComponentsDeployed=Number(t.numberComponentsDeployed),t.numberComponentsTotal=Number(t.numberComponentsTotal),t.numberTestErrors=Number(t.numberTestErrors),t.numberTestsCompleted=Number(t.numberTestsCompleted),t.numberTestsTotal=Number(t.numberTestsTotal),t})).thenCall(r)};var y=function(t,e,r){this._meta=t,this._results=e,this._isArray=r};n(y,o.EventEmitter),y.prototype.then=function(t,e){var r=this;return this._results.then((function(e){var n=function(t){return t.$&&\"true\"===t.$[\"xsi:nil\"]?null:(t.done=\"true\"===t.done,t)};return e=u.isArray(e)?u.map(e,n):n(e),r._isArray&&!u.isArray(e)&&(e=[e]),t(e)}),e)},y.prototype.thenCall=function(e){return u.isFunction(e)?this.then((function(r){t.nextTick((function(){e(null,r)}))}),(function(r){t.nextTick((function(){e(r)}))})):this},y.prototype.check=function(t){var e=this,r=this._meta;return this.then((function(t){var n=u.isArray(t)?u.map(t,(function(t){return t.id})):t.id;return e._ids=n,r.checkStatus(n)})).thenCall(t)},y.prototype.poll=function(t,e){var r=this,n=(new Date).getTime(),o=function(){var i=(new Date).getTime();if(n+e<i){var s=\"Polling time out.\";return r._ids&&(s+=\" Process Id = \"+r._ids),void r.emit(\"error\",new Error(s))}r.check().then((function(e){for(var n=!0,i=u.isArray(e)?e:[e],s=0,a=i.length;s<a;s++){var f=i[s];f&&!f.done&&(r.emit(\"progress\",f),n=!1)}n?r.emit(\"complete\",e):setTimeout(o,t)}),(function(t){r.emit(\"error\",t)}))};setTimeout(o,t)},y.prototype.complete=function(t){var e=a.defer();this.on(\"complete\",(function(t){e.resolve(t)})),this.on(\"error\",(function(t){e.reject(t)}));var r=this._meta;return this.poll(r.pollInterval,r.pollTimeout),e.promise.thenCall(t)};var d=function(t,e){d.super_.call(this,t,e)};n(d,y),d.prototype.complete=function(t){var e=this._meta;return d.super_.prototype.complete.call(this).then((function(t){return e.checkRetrieveStatus(t.id)})).thenCall(t)},d.prototype.stream=function(){var t=this,e=new i.Readable,n=!1;return e._read=function(){n||(n=!0,t.complete((function(t,n){t?e.emit(\"error\",t):(e.push(new r(n.zipFile,\"base64\")),e.push(null))})))},e};var g=function(t,e){g.super_.call(this,t,e)};n(g,y),g.prototype.complete=function(t,e){u.isFunction(t)&&(e=t,t=!1);var r=this._meta;return g.super_.prototype.complete.call(this).then((function(e){return r.checkDeployStatus(e.id,t)})).thenCall(e)},s.on(\"connection:new\",(function(t){t.metadata=new h(t)}))}).call(this,t(\"_process\"),t(\"buffer\").Buffer)},{_process:6,buffer:3}],2:[function(t,e,r){\"use strict\";r.byteLength=function(t){var e=f(t),r=e[0],n=e[1];return 3*(r+n)/4-n},r.toByteArray=function(t){var e,r,n=f(t),u=n[0],s=n[1],a=new i(function(t,e,r){return 3*(e+r)/4-r}(0,u,s)),h=0,c=s>0?u-4:u;for(r=0;r<c;r+=4)e=o[t.charCodeAt(r)]<<18|o[t.charCodeAt(r+1)]<<12|o[t.charCodeAt(r+2)]<<6|o[t.charCodeAt(r+3)],a[h++]=e>>16&255,a[h++]=e>>8&255,a[h++]=255&e;2===s&&(e=o[t.charCodeAt(r)]<<2|o[t.charCodeAt(r+1)]>>4,a[h++]=255&e);1===s&&(e=o[t.charCodeAt(r)]<<10|o[t.charCodeAt(r+1)]<<4|o[t.charCodeAt(r+2)]>>2,a[h++]=e>>8&255,a[h++]=255&e);return a},r.fromByteArray=function(t){for(var e,r=t.length,o=r%3,i=[],u=0,s=r-o;u<s;u+=16383)i.push(h(t,u,u+16383>s?s:u+16383));1===o?(e=t[r-1],i.push(n[e>>2]+n[e<<4&63]+\"==\")):2===o&&(e=(t[r-2]<<8)+t[r-1],i.push(n[e>>10]+n[e>>4&63]+n[e<<2&63]+\"=\"));return i.join(\"\")};for(var n=[],o=[],i=\"undefined\"!=typeof Uint8Array?Uint8Array:Array,u=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",s=0,a=u.length;s<a;++s)n[s]=u[s],o[u.charCodeAt(s)]=s;function f(t){var e=t.length;if(e%4>0)throw new Error(\"Invalid string. Length must be a multiple of 4\");var r=t.indexOf(\"=\");return-1===r&&(r=e),[r,r===e?0:4-r%4]}function h(t,e,r){for(var o,i,u=[],s=e;s<r;s+=3)o=(t[s]<<16&16711680)+(t[s+1]<<8&65280)+(255&t[s+2]),u.push(n[(i=o)>>18&63]+n[i>>12&63]+n[i>>6&63]+n[63&i]);return u.join(\"\")}o[\"-\".charCodeAt(0)]=62,o[\"_\".charCodeAt(0)]=63},{}],3:[function(t,e,r){(function(e,n){\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n\"use strict\";var o=t(\"base64-js\"),i=t(\"ieee754\"),u=t(\"isarray\");function s(){return n.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function a(t,e){if(s()<e)throw new RangeError(\"Invalid typed array length\");return n.TYPED_ARRAY_SUPPORT?(t=new Uint8Array(e)).__proto__=n.prototype:(null===t&&(t=new n(e)),t.length=e),t}function n(t,e,r){if(!(n.TYPED_ARRAY_SUPPORT||this instanceof n))return new n(t,e,r);if(\"number\"==typeof t){if(\"string\"==typeof e)throw new Error(\"If encoding is specified then the first argument must be a string\");return c(this,t)}return f(this,t,e,r)}function f(t,e,r,o){if(\"number\"==typeof e)throw new TypeError('\"value\" argument must not be a number');return\"undefined\"!=typeof ArrayBuffer&&e instanceof ArrayBuffer?function(t,e,r,o){if(e.byteLength,r<0||e.byteLength<r)throw new RangeError(\"'offset' is out of bounds\");if(e.byteLength<r+(o||0))throw new RangeError(\"'length' is out of bounds\");e=void 0===r&&void 0===o?new Uint8Array(e):void 0===o?new Uint8Array(e,r):new Uint8Array(e,r,o);n.TYPED_ARRAY_SUPPORT?(t=e).__proto__=n.prototype:t=l(t,e);return t}(t,e,r,o):\"string\"==typeof e?function(t,e,r){\"string\"==typeof r&&\"\"!==r||(r=\"utf8\");if(!n.isEncoding(r))throw new TypeError('\"encoding\" must be a valid string encoding');var o=0|y(e,r),i=(t=a(t,o)).write(e,r);i!==o&&(t=t.slice(0,i));return t}(t,e,r):function(t,e){if(n.isBuffer(e)){var r=0|p(e.length);return 0===(t=a(t,r)).length?t:(e.copy(t,0,0,r),t)}if(e){if(\"undefined\"!=typeof ArrayBuffer&&e.buffer instanceof ArrayBuffer||\"length\"in e)return\"number\"!=typeof e.length||(o=e.length)!=o?a(t,0):l(t,e);if(\"Buffer\"===e.type&&u(e.data))return l(t,e.data)}var o;throw new TypeError(\"First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.\")}(t,e)}function h(t){if(\"number\"!=typeof t)throw new TypeError('\"size\" argument must be a number');if(t<0)throw new RangeError('\"size\" argument must not be negative')}function c(t,e){if(h(e),t=a(t,e<0?0:0|p(e)),!n.TYPED_ARRAY_SUPPORT)for(var r=0;r<e;++r)t[r]=0;return t}function l(t,e){var r=e.length<0?0:0|p(e.length);t=a(t,r);for(var n=0;n<r;n+=1)t[n]=255&e[n];return t}function p(t){if(t>=s())throw new RangeError(\"Attempt to allocate Buffer larger than maximum size: 0x\"+s().toString(16)+\" bytes\");return 0|t}function y(t,e){if(n.isBuffer(t))return t.length;if(\"undefined\"!=typeof ArrayBuffer&&\"function\"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(t)||t instanceof ArrayBuffer))return t.byteLength;\"string\"!=typeof t&&(t=\"\"+t);var r=t.length;if(0===r)return 0;for(var o=!1;;)switch(e){case\"ascii\":case\"latin1\":case\"binary\":return r;case\"utf8\":case\"utf-8\":case void 0:return j(t).length;case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return 2*r;case\"hex\":return r>>>1;case\"base64\":return F(t).length;default:if(o)return j(t).length;e=(\"\"+e).toLowerCase(),o=!0}}function d(t,e,r){var n=!1;if((void 0===e||e<0)&&(e=0),e>this.length)return\"\";if((void 0===r||r>this.length)&&(r=this.length),r<=0)return\"\";if((r>>>=0)<=(e>>>=0))return\"\";for(t||(t=\"utf8\");;)switch(t){case\"hex\":return C(this,e,r);case\"utf8\":case\"utf-8\":return S(this,e,r);case\"ascii\":return P(this,e,r);case\"latin1\":case\"binary\":return B(this,e,r);case\"base64\":return R(this,e,r);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return U(this,e,r);default:if(n)throw new TypeError(\"Unknown encoding: \"+t);t=(t+\"\").toLowerCase(),n=!0}}function g(t,e,r){var n=t[e];t[e]=t[r],t[r]=n}function m(t,e,r,o,i){if(0===t.length)return-1;if(\"string\"==typeof r?(o=r,r=0):r>2147483647?r=2147483647:r<-2147483648&&(r=-2147483648),r=+r,isNaN(r)&&(r=i?0:t.length-1),r<0&&(r=t.length+r),r>=t.length){if(i)return-1;r=t.length-1}else if(r<0){if(!i)return-1;r=0}if(\"string\"==typeof e&&(e=n.from(e,o)),n.isBuffer(e))return 0===e.length?-1:v(t,e,r,o,i);if(\"number\"==typeof e)return e&=255,n.TYPED_ARRAY_SUPPORT&&\"function\"==typeof Uint8Array.prototype.indexOf?i?Uint8Array.prototype.indexOf.call(t,e,r):Uint8Array.prototype.lastIndexOf.call(t,e,r):v(t,[e],r,o,i);throw new TypeError(\"val must be string, number or Buffer\")}function v(t,e,r,n,o){var i,u=1,s=t.length,a=e.length;if(void 0!==n&&(\"ucs2\"===(n=String(n).toLowerCase())||\"ucs-2\"===n||\"utf16le\"===n||\"utf-16le\"===n)){if(t.length<2||e.length<2)return-1;u=2,s/=2,a/=2,r/=2}function f(t,e){return 1===u?t[e]:t.readUInt16BE(e*u)}if(o){var h=-1;for(i=r;i<s;i++)if(f(t,i)===f(e,-1===h?0:i-h)){if(-1===h&&(h=i),i-h+1===a)return h*u}else-1!==h&&(i-=i-h),h=-1}else for(r+a>s&&(r=s-a),i=r;i>=0;i--){for(var c=!0,l=0;l<a;l++)if(f(t,i+l)!==f(e,l)){c=!1;break}if(c)return i}return-1}function w(t,e,r,n){r=Number(r)||0;var o=t.length-r;n?(n=Number(n))>o&&(n=o):n=o;var i=e.length;if(i%2!=0)throw new TypeError(\"Invalid hex string\");n>i/2&&(n=i/2);for(var u=0;u<n;++u){var s=parseInt(e.substr(2*u,2),16);if(isNaN(s))return u;t[r+u]=s}return u}function b(t,e,r,n){return q(j(e,t.length-r),t,r,n)}function A(t,e,r,n){return q(function(t){for(var e=[],r=0;r<t.length;++r)e.push(255&t.charCodeAt(r));return e}(e),t,r,n)}function _(t,e,r,n){return A(t,e,r,n)}function E(t,e,r,n){return q(F(e),t,r,n)}function T(t,e,r,n){return q(function(t,e){for(var r,n,o,i=[],u=0;u<t.length&&!((e-=2)<0);++u)r=t.charCodeAt(u),n=r>>8,o=r%256,i.push(o),i.push(n);return i}(e,t.length-r),t,r,n)}function R(t,e,r){return 0===e&&r===t.length?o.fromByteArray(t):o.fromByteArray(t.slice(e,r))}function S(t,e,r){r=Math.min(t.length,r);for(var n=[],o=e;o<r;){var i,u,s,a,f=t[o],h=null,c=f>239?4:f>223?3:f>191?2:1;if(o+c<=r)switch(c){case 1:f<128&&(h=f);break;case 2:128==(192&(i=t[o+1]))&&(a=(31&f)<<6|63&i)>127&&(h=a);break;case 3:i=t[o+1],u=t[o+2],128==(192&i)&&128==(192&u)&&(a=(15&f)<<12|(63&i)<<6|63&u)>2047&&(a<55296||a>57343)&&(h=a);break;case 4:i=t[o+1],u=t[o+2],s=t[o+3],128==(192&i)&&128==(192&u)&&128==(192&s)&&(a=(15&f)<<18|(63&i)<<12|(63&u)<<6|63&s)>65535&&a<1114112&&(h=a)}null===h?(h=65533,c=1):h>65535&&(h-=65536,n.push(h>>>10&1023|55296),h=56320|1023&h),n.push(h),o+=c}return function(t){var e=t.length;if(e<=4096)return String.fromCharCode.apply(String,t);var r=\"\",n=0;for(;n<e;)r+=String.fromCharCode.apply(String,t.slice(n,n+=4096));return r}(n)}r.Buffer=n,r.SlowBuffer=function(t){+t!=t&&(t=0);return n.alloc(+t)},r.INSPECT_MAX_BYTES=50,n.TYPED_ARRAY_SUPPORT=void 0!==e.TYPED_ARRAY_SUPPORT?e.TYPED_ARRAY_SUPPORT:function(){try{var t=new Uint8Array(1);return t.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===t.foo()&&\"function\"==typeof t.subarray&&0===t.subarray(1,1).byteLength}catch(t){return!1}}(),r.kMaxLength=s(),n.poolSize=8192,n._augment=function(t){return t.__proto__=n.prototype,t},n.from=function(t,e,r){return f(null,t,e,r)},n.TYPED_ARRAY_SUPPORT&&(n.prototype.__proto__=Uint8Array.prototype,n.__proto__=Uint8Array,\"undefined\"!=typeof Symbol&&Symbol.species&&n[Symbol.species]===n&&Object.defineProperty(n,Symbol.species,{value:null,configurable:!0})),n.alloc=function(t,e,r){return function(t,e,r,n){return h(e),e<=0?a(t,e):void 0!==r?\"string\"==typeof n?a(t,e).fill(r,n):a(t,e).fill(r):a(t,e)}(null,t,e,r)},n.allocUnsafe=function(t){return c(null,t)},n.allocUnsafeSlow=function(t){return c(null,t)},n.isBuffer=function(t){return!(null==t||!t._isBuffer)},n.compare=function(t,e){if(!n.isBuffer(t)||!n.isBuffer(e))throw new TypeError(\"Arguments must be Buffers\");if(t===e)return 0;for(var r=t.length,o=e.length,i=0,u=Math.min(r,o);i<u;++i)if(t[i]!==e[i]){r=t[i],o=e[i];break}return r<o?-1:o<r?1:0},n.isEncoding=function(t){switch(String(t).toLowerCase()){case\"hex\":case\"utf8\":case\"utf-8\":case\"ascii\":case\"latin1\":case\"binary\":case\"base64\":case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return!0;default:return!1}},n.concat=function(t,e){if(!u(t))throw new TypeError('\"list\" argument must be an Array of Buffers');if(0===t.length)return n.alloc(0);var r;if(void 0===e)for(e=0,r=0;r<t.length;++r)e+=t[r].length;var o=n.allocUnsafe(e),i=0;for(r=0;r<t.length;++r){var s=t[r];if(!n.isBuffer(s))throw new TypeError('\"list\" argument must be an Array of Buffers');s.copy(o,i),i+=s.length}return o},n.byteLength=y,n.prototype._isBuffer=!0,n.prototype.swap16=function(){var t=this.length;if(t%2!=0)throw new RangeError(\"Buffer size must be a multiple of 16-bits\");for(var e=0;e<t;e+=2)g(this,e,e+1);return this},n.prototype.swap32=function(){var t=this.length;if(t%4!=0)throw new RangeError(\"Buffer size must be a multiple of 32-bits\");for(var e=0;e<t;e+=4)g(this,e,e+3),g(this,e+1,e+2);return this},n.prototype.swap64=function(){var t=this.length;if(t%8!=0)throw new RangeError(\"Buffer size must be a multiple of 64-bits\");for(var e=0;e<t;e+=8)g(this,e,e+7),g(this,e+1,e+6),g(this,e+2,e+5),g(this,e+3,e+4);return this},n.prototype.toString=function(){var t=0|this.length;return 0===t?\"\":0===arguments.length?S(this,0,t):d.apply(this,arguments)},n.prototype.equals=function(t){if(!n.isBuffer(t))throw new TypeError(\"Argument must be a Buffer\");return this===t||0===n.compare(this,t)},n.prototype.inspect=function(){var t=\"\",e=r.INSPECT_MAX_BYTES;return this.length>0&&(t=this.toString(\"hex\",0,e).match(/.{2}/g).join(\" \"),this.length>e&&(t+=\" ... \")),\"<Buffer \"+t+\">\"},n.prototype.compare=function(t,e,r,o,i){if(!n.isBuffer(t))throw new TypeError(\"Argument must be a Buffer\");if(void 0===e&&(e=0),void 0===r&&(r=t?t.length:0),void 0===o&&(o=0),void 0===i&&(i=this.length),e<0||r>t.length||o<0||i>this.length)throw new RangeError(\"out of range index\");if(o>=i&&e>=r)return 0;if(o>=i)return-1;if(e>=r)return 1;if(this===t)return 0;for(var u=(i>>>=0)-(o>>>=0),s=(r>>>=0)-(e>>>=0),a=Math.min(u,s),f=this.slice(o,i),h=t.slice(e,r),c=0;c<a;++c)if(f[c]!==h[c]){u=f[c],s=h[c];break}return u<s?-1:s<u?1:0},n.prototype.includes=function(t,e,r){return-1!==this.indexOf(t,e,r)},n.prototype.indexOf=function(t,e,r){return m(this,t,e,r,!0)},n.prototype.lastIndexOf=function(t,e,r){return m(this,t,e,r,!1)},n.prototype.write=function(t,e,r,n){if(void 0===e)n=\"utf8\",r=this.length,e=0;else if(void 0===r&&\"string\"==typeof e)n=e,r=this.length,e=0;else{if(!isFinite(e))throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\");e|=0,isFinite(r)?(r|=0,void 0===n&&(n=\"utf8\")):(n=r,r=void 0)}var o=this.length-e;if((void 0===r||r>o)&&(r=o),t.length>0&&(r<0||e<0)||e>this.length)throw new RangeError(\"Attempt to write outside buffer bounds\");n||(n=\"utf8\");for(var i=!1;;)switch(n){case\"hex\":return w(this,t,e,r);case\"utf8\":case\"utf-8\":return b(this,t,e,r);case\"ascii\":return A(this,t,e,r);case\"latin1\":case\"binary\":return _(this,t,e,r);case\"base64\":return E(this,t,e,r);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return T(this,t,e,r);default:if(i)throw new TypeError(\"Unknown encoding: \"+n);n=(\"\"+n).toLowerCase(),i=!0}},n.prototype.toJSON=function(){return{type:\"Buffer\",data:Array.prototype.slice.call(this._arr||this,0)}};function P(t,e,r){var n=\"\";r=Math.min(t.length,r);for(var o=e;o<r;++o)n+=String.fromCharCode(127&t[o]);return n}function B(t,e,r){var n=\"\";r=Math.min(t.length,r);for(var o=e;o<r;++o)n+=String.fromCharCode(t[o]);return n}function C(t,e,r){var n=t.length;(!e||e<0)&&(e=0),(!r||r<0||r>n)&&(r=n);for(var o=\"\",i=e;i<r;++i)o+=N(t[i]);return o}function U(t,e,r){for(var n=t.slice(e,r),o=\"\",i=0;i<n.length;i+=2)o+=String.fromCharCode(n[i]+256*n[i+1]);return o}function k(t,e,r){if(t%1!=0||t<0)throw new RangeError(\"offset is not uint\");if(t+e>r)throw new RangeError(\"Trying to access beyond buffer length\")}function O(t,e,r,o,i,u){if(!n.isBuffer(t))throw new TypeError('\"buffer\" argument must be a Buffer instance');if(e>i||e<u)throw new RangeError('\"value\" argument is out of bounds');if(r+o>t.length)throw new RangeError(\"Index out of range\")}function I(t,e,r,n){e<0&&(e=65535+e+1);for(var o=0,i=Math.min(t.length-r,2);o<i;++o)t[r+o]=(e&255<<8*(n?o:1-o))>>>8*(n?o:1-o)}function Y(t,e,r,n){e<0&&(e=4294967295+e+1);for(var o=0,i=Math.min(t.length-r,4);o<i;++o)t[r+o]=e>>>8*(n?o:3-o)&255}function x(t,e,r,n,o,i){if(r+n>t.length)throw new RangeError(\"Index out of range\");if(r<0)throw new RangeError(\"Index out of range\")}function M(t,e,r,n,o){return o||x(t,0,r,4),i.write(t,e,r,n,23,4),r+4}function D(t,e,r,n,o){return o||x(t,0,r,8),i.write(t,e,r,n,52,8),r+8}n.prototype.slice=function(t,e){var r,o=this.length;if((t=~~t)<0?(t+=o)<0&&(t=0):t>o&&(t=o),(e=void 0===e?o:~~e)<0?(e+=o)<0&&(e=0):e>o&&(e=o),e<t&&(e=t),n.TYPED_ARRAY_SUPPORT)(r=this.subarray(t,e)).__proto__=n.prototype;else{var i=e-t;r=new n(i,void 0);for(var u=0;u<i;++u)r[u]=this[u+t]}return r},n.prototype.readUIntLE=function(t,e,r){t|=0,e|=0,r||k(t,e,this.length);for(var n=this[t],o=1,i=0;++i<e&&(o*=256);)n+=this[t+i]*o;return n},n.prototype.readUIntBE=function(t,e,r){t|=0,e|=0,r||k(t,e,this.length);for(var n=this[t+--e],o=1;e>0&&(o*=256);)n+=this[t+--e]*o;return n},n.prototype.readUInt8=function(t,e){return e||k(t,1,this.length),this[t]},n.prototype.readUInt16LE=function(t,e){return e||k(t,2,this.length),this[t]|this[t+1]<<8},n.prototype.readUInt16BE=function(t,e){return e||k(t,2,this.length),this[t]<<8|this[t+1]},n.prototype.readUInt32LE=function(t,e){return e||k(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+16777216*this[t+3]},n.prototype.readUInt32BE=function(t,e){return e||k(t,4,this.length),16777216*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},n.prototype.readIntLE=function(t,e,r){t|=0,e|=0,r||k(t,e,this.length);for(var n=this[t],o=1,i=0;++i<e&&(o*=256);)n+=this[t+i]*o;return n>=(o*=128)&&(n-=Math.pow(2,8*e)),n},n.prototype.readIntBE=function(t,e,r){t|=0,e|=0,r||k(t,e,this.length);for(var n=e,o=1,i=this[t+--n];n>0&&(o*=256);)i+=this[t+--n]*o;return i>=(o*=128)&&(i-=Math.pow(2,8*e)),i},n.prototype.readInt8=function(t,e){return e||k(t,1,this.length),128&this[t]?-1*(255-this[t]+1):this[t]},n.prototype.readInt16LE=function(t,e){e||k(t,2,this.length);var r=this[t]|this[t+1]<<8;return 32768&r?4294901760|r:r},n.prototype.readInt16BE=function(t,e){e||k(t,2,this.length);var r=this[t+1]|this[t]<<8;return 32768&r?4294901760|r:r},n.prototype.readInt32LE=function(t,e){return e||k(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},n.prototype.readInt32BE=function(t,e){return e||k(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},n.prototype.readFloatLE=function(t,e){return e||k(t,4,this.length),i.read(this,t,!0,23,4)},n.prototype.readFloatBE=function(t,e){return e||k(t,4,this.length),i.read(this,t,!1,23,4)},n.prototype.readDoubleLE=function(t,e){return e||k(t,8,this.length),i.read(this,t,!0,52,8)},n.prototype.readDoubleBE=function(t,e){return e||k(t,8,this.length),i.read(this,t,!1,52,8)},n.prototype.writeUIntLE=function(t,e,r,n){(t=+t,e|=0,r|=0,n)||O(this,t,e,r,Math.pow(2,8*r)-1,0);var o=1,i=0;for(this[e]=255&t;++i<r&&(o*=256);)this[e+i]=t/o&255;return e+r},n.prototype.writeUIntBE=function(t,e,r,n){(t=+t,e|=0,r|=0,n)||O(this,t,e,r,Math.pow(2,8*r)-1,0);var o=r-1,i=1;for(this[e+o]=255&t;--o>=0&&(i*=256);)this[e+o]=t/i&255;return e+r},n.prototype.writeUInt8=function(t,e,r){return t=+t,e|=0,r||O(this,t,e,1,255,0),n.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),this[e]=255&t,e+1},n.prototype.writeUInt16LE=function(t,e,r){return t=+t,e|=0,r||O(this,t,e,2,65535,0),n.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8):I(this,t,e,!0),e+2},n.prototype.writeUInt16BE=function(t,e,r){return t=+t,e|=0,r||O(this,t,e,2,65535,0),n.TYPED_ARRAY_SUPPORT?(this[e]=t>>>8,this[e+1]=255&t):I(this,t,e,!1),e+2},n.prototype.writeUInt32LE=function(t,e,r){return t=+t,e|=0,r||O(this,t,e,4,4294967295,0),n.TYPED_ARRAY_SUPPORT?(this[e+3]=t>>>24,this[e+2]=t>>>16,this[e+1]=t>>>8,this[e]=255&t):Y(this,t,e,!0),e+4},n.prototype.writeUInt32BE=function(t,e,r){return t=+t,e|=0,r||O(this,t,e,4,4294967295,0),n.TYPED_ARRAY_SUPPORT?(this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t):Y(this,t,e,!1),e+4},n.prototype.writeIntLE=function(t,e,r,n){if(t=+t,e|=0,!n){var o=Math.pow(2,8*r-1);O(this,t,e,r,o-1,-o)}var i=0,u=1,s=0;for(this[e]=255&t;++i<r&&(u*=256);)t<0&&0===s&&0!==this[e+i-1]&&(s=1),this[e+i]=(t/u>>0)-s&255;return e+r},n.prototype.writeIntBE=function(t,e,r,n){if(t=+t,e|=0,!n){var o=Math.pow(2,8*r-1);O(this,t,e,r,o-1,-o)}var i=r-1,u=1,s=0;for(this[e+i]=255&t;--i>=0&&(u*=256);)t<0&&0===s&&0!==this[e+i+1]&&(s=1),this[e+i]=(t/u>>0)-s&255;return e+r},n.prototype.writeInt8=function(t,e,r){return t=+t,e|=0,r||O(this,t,e,1,127,-128),n.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),t<0&&(t=255+t+1),this[e]=255&t,e+1},n.prototype.writeInt16LE=function(t,e,r){return t=+t,e|=0,r||O(this,t,e,2,32767,-32768),n.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8):I(this,t,e,!0),e+2},n.prototype.writeInt16BE=function(t,e,r){return t=+t,e|=0,r||O(this,t,e,2,32767,-32768),n.TYPED_ARRAY_SUPPORT?(this[e]=t>>>8,this[e+1]=255&t):I(this,t,e,!1),e+2},n.prototype.writeInt32LE=function(t,e,r){return t=+t,e|=0,r||O(this,t,e,4,2147483647,-2147483648),n.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8,this[e+2]=t>>>16,this[e+3]=t>>>24):Y(this,t,e,!0),e+4},n.prototype.writeInt32BE=function(t,e,r){return t=+t,e|=0,r||O(this,t,e,4,2147483647,-2147483648),t<0&&(t=4294967295+t+1),n.TYPED_ARRAY_SUPPORT?(this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t):Y(this,t,e,!1),e+4},n.prototype.writeFloatLE=function(t,e,r){return M(this,t,e,!0,r)},n.prototype.writeFloatBE=function(t,e,r){return M(this,t,e,!1,r)},n.prototype.writeDoubleLE=function(t,e,r){return D(this,t,e,!0,r)},n.prototype.writeDoubleBE=function(t,e,r){return D(this,t,e,!1,r)},n.prototype.copy=function(t,e,r,o){if(r||(r=0),o||0===o||(o=this.length),e>=t.length&&(e=t.length),e||(e=0),o>0&&o<r&&(o=r),o===r)return 0;if(0===t.length||0===this.length)return 0;if(e<0)throw new RangeError(\"targetStart out of bounds\");if(r<0||r>=this.length)throw new RangeError(\"sourceStart out of bounds\");if(o<0)throw new RangeError(\"sourceEnd out of bounds\");o>this.length&&(o=this.length),t.length-e<o-r&&(o=t.length-e+r);var i,u=o-r;if(this===t&&r<e&&e<o)for(i=u-1;i>=0;--i)t[i+e]=this[i+r];else if(u<1e3||!n.TYPED_ARRAY_SUPPORT)for(i=0;i<u;++i)t[i+e]=this[i+r];else Uint8Array.prototype.set.call(t,this.subarray(r,r+u),e);return u},n.prototype.fill=function(t,e,r,o){if(\"string\"==typeof t){if(\"string\"==typeof e?(o=e,e=0,r=this.length):\"string\"==typeof r&&(o=r,r=this.length),1===t.length){var i=t.charCodeAt(0);i<256&&(t=i)}if(void 0!==o&&\"string\"!=typeof o)throw new TypeError(\"encoding must be a string\");if(\"string\"==typeof o&&!n.isEncoding(o))throw new TypeError(\"Unknown encoding: \"+o)}else\"number\"==typeof t&&(t&=255);if(e<0||this.length<e||this.length<r)throw new RangeError(\"Out of range index\");if(r<=e)return this;var u;if(e>>>=0,r=void 0===r?this.length:r>>>0,t||(t=0),\"number\"==typeof t)for(u=e;u<r;++u)this[u]=t;else{var s=n.isBuffer(t)?t:j(new n(t,o).toString()),a=s.length;for(u=0;u<r-e;++u)this[u+e]=s[u%a]}return this};var L=/[^+\\/0-9A-Za-z-_]/g;function N(t){return t<16?\"0\"+t.toString(16):t.toString(16)}function j(t,e){var r;e=e||1/0;for(var n=t.length,o=null,i=[],u=0;u<n;++u){if((r=t.charCodeAt(u))>55295&&r<57344){if(!o){if(r>56319){(e-=3)>-1&&i.push(239,191,189);continue}if(u+1===n){(e-=3)>-1&&i.push(239,191,189);continue}o=r;continue}if(r<56320){(e-=3)>-1&&i.push(239,191,189),o=r;continue}r=65536+(o-55296<<10|r-56320)}else o&&(e-=3)>-1&&i.push(239,191,189);if(o=null,r<128){if((e-=1)<0)break;i.push(r)}else if(r<2048){if((e-=2)<0)break;i.push(r>>6|192,63&r|128)}else if(r<65536){if((e-=3)<0)break;i.push(r>>12|224,r>>6&63|128,63&r|128)}else{if(!(r<1114112))throw new Error(\"Invalid code point\");if((e-=4)<0)break;i.push(r>>18|240,r>>12&63|128,r>>6&63|128,63&r|128)}}return i}function F(t){return o.toByteArray(function(t){if((t=function(t){return t.trim?t.trim():t.replace(/^\\s+|\\s+$/g,\"\")}(t).replace(L,\"\")).length<2)return\"\";for(;t.length%4!=0;)t+=\"=\";return t}(t))}function q(t,e,r,n){for(var o=0;o<n&&!(o+r>=e.length||o>=t.length);++o)e[o+r]=t[o];return o}}).call(this,\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},t(\"buffer\").Buffer)},{\"base64-js\":2,buffer:3,ieee754:4,isarray:5}],4:[function(t,e,r){r.read=function(t,e,r,n,o){var i,u,s=8*o-n-1,a=(1<<s)-1,f=a>>1,h=-7,c=r?o-1:0,l=r?-1:1,p=t[e+c];for(c+=l,i=p&(1<<-h)-1,p>>=-h,h+=s;h>0;i=256*i+t[e+c],c+=l,h-=8);for(u=i&(1<<-h)-1,i>>=-h,h+=n;h>0;u=256*u+t[e+c],c+=l,h-=8);if(0===i)i=1-f;else{if(i===a)return u?NaN:1/0*(p?-1:1);u+=Math.pow(2,n),i-=f}return(p?-1:1)*u*Math.pow(2,i-n)},r.write=function(t,e,r,n,o,i){var u,s,a,f=8*i-o-1,h=(1<<f)-1,c=h>>1,l=23===o?Math.pow(2,-24)-Math.pow(2,-77):0,p=n?0:i-1,y=n?1:-1,d=e<0||0===e&&1/e<0?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(s=isNaN(e)?1:0,u=h):(u=Math.floor(Math.log(e)/Math.LN2),e*(a=Math.pow(2,-u))<1&&(u--,a*=2),(e+=u+c>=1?l/a:l*Math.pow(2,1-c))*a>=2&&(u++,a/=2),u+c>=h?(s=0,u=h):u+c>=1?(s=(e*a-1)*Math.pow(2,o),u+=c):(s=e*Math.pow(2,c-1)*Math.pow(2,o),u=0));o>=8;t[r+p]=255&s,p+=y,s/=256,o-=8);for(u=u<<o|s,f+=o;f>0;t[r+p]=255&u,p+=y,u/=256,f-=8);t[r+p-y]|=128*d}},{}],5:[function(t,e,r){var n={}.toString;e.exports=Array.isArray||function(t){return\"[object Array]\"==n.call(t)}},{}],6:[function(t,e,r){var n,o,i=e.exports={};function u(){throw new Error(\"setTimeout has not been defined\")}function s(){throw new Error(\"clearTimeout has not been defined\")}function a(t){if(n===setTimeout)return setTimeout(t,0);if((n===u||!n)&&setTimeout)return n=setTimeout,setTimeout(t,0);try{return n(t,0)}catch(e){try{return n.call(null,t,0)}catch(e){return n.call(this,t,0)}}}!function(){try{n=\"function\"==typeof setTimeout?setTimeout:u}catch(t){n=u}try{o=\"function\"==typeof clearTimeout?clearTimeout:s}catch(t){o=s}}();var f,h=[],c=!1,l=-1;function p(){c&&f&&(c=!1,f.length?h=f.concat(h):l=-1,h.length&&y())}function y(){if(!c){var t=a(p);c=!0;for(var e=h.length;e;){for(f=h,h=[];++l<e;)f&&f[l].run();l=-1,e=h.length}f=null,c=!1,function(t){if(o===clearTimeout)return clearTimeout(t);if((o===s||!o)&&clearTimeout)return o=clearTimeout,clearTimeout(t);try{o(t)}catch(e){try{return o.call(null,t)}catch(e){return o.call(this,t)}}}(t)}}function d(t,e){this.fun=t,this.array=e}function g(){}i.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var r=1;r<arguments.length;r++)e[r-1]=arguments[r];h.push(new d(t,e)),1!==h.length||c||a(y)},d.prototype.run=function(){this.fun.apply(null,this.array)},i.title=\"browser\",i.browser=!0,i.env={},i.argv=[],i.version=\"\",i.versions={},i.on=g,i.addListener=g,i.once=g,i.off=g,i.removeListener=g,i.removeAllListeners=g,i.emit=g,i.prependListener=g,i.prependOnceListener=g,i.listeners=function(t){return[]},i.binding=function(t){throw new Error(\"process.binding is not supported\")},i.cwd=function(){return\"/\"},i.chdir=function(t){throw new Error(\"process.chdir is not supported\")},i.umask=function(){return 0}},{}]},{},[1])(1)}));\n//# sourceMappingURL=jsforce-api-metadata.min.js.map\n","/*global process, Buffer */\n/**\n * @file Manages Salesforce Metadata API\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar inherits = window.jsforce.require('inherits'),\n    events  = window.jsforce.require('events'),\n    stream  = window.jsforce.require('readable-stream'),\n    _       = window.jsforce.require('lodash/core'),\n    jsforce = window.jsforce.require('./core'),\n    Promise = window.jsforce.require('./promise'),\n    SOAP    = window.jsforce.require('./soap');\n\n/*--------------------------------------------*/\n/**\n * Class for Salesforce Metadata API\n *\n * @class\n * @param {Connection} conn - Connection object\n */\nvar Metadata = module.exports = function(conn) {\n  this._conn = conn;\n};\n\n\n/**\n * Polling interval in milliseconds\n * @type {Number}\n */\nMetadata.prototype.pollInterval = 1000;\n\n/**\n * Polling timeout in milliseconds\n * @type {Number}\n */\nMetadata.prototype.pollTimeout = 10000;\n\n\n/**\n * Call Metadata API SOAP endpoint\n *\n * @private\n */\nMetadata.prototype._invoke = function(method, message, callback) {\n  var soapEndpoint = new SOAP(this._conn, {\n    xmlns: \"http://soap.sforce.com/2006/04/metadata\",\n    endpointUrl: this._conn.instanceUrl + \"/services/Soap/m/\" + this._conn.version\n  });\n  return soapEndpoint.invoke(method, message).then(function(res) {\n    return res.result;\n  }).thenCall(callback);\n};\n\n\n/**\n * @typedef {Object} Metadata~MetadataInfo\n * @prop {String} fullName - The name of the component\n */\n\n/**\n * Asynchronously adds one or more new metadata components to the organization.\n *\n * @param {String} type - The type of metadata to create\n * @param {Metadata~MetadataInfo|Array.<Metadata~MetadataInfo>} metadata - Metadata to create\n * @param {Callback.<Metadata~AsyncResult|Array.<Metadata~AsyncResult>>} [callback] - Callback function\n * @returns {Metadata~AsyncResultLocator}\n */\nMetadata.prototype.createAsync = function(type, metadata, callback) {\n  if (Number(this._conn.version) > 30) {\n    throw new Error(\"Async metadata CRUD calls are not supported on ver 31.0 or later.\");\n  }\n  var convert = function(md) {\n    md[\"@xsi:type\"] = type;\n    return md;\n  };\n  var isArray = _.isArray(metadata);\n  metadata = isArray ? _.map(metadata, convert) : convert(metadata);\n  var res = this._invoke(\"create\", { metadata: metadata });\n  return new AsyncResultLocator(this, res, isArray).thenCall(callback);\n};\n\n/**\n * @typedef {Object} Metadata~SaveResult\n * @prop {Boolean} success - True if metadata is successfully saved\n * @prop {String} fullName - Full name of metadata object\n */\n\n/**\n * @private\n */\nfunction convertToSaveResult(result) {\n  var saveResult = _.clone(result);\n  saveResult.success = saveResult.success === 'true';\n  return saveResult;\n}\n\n/**\n * @typedef {Object} Metadata~UpsertResult\n * @prop {Boolean} success - True if metadata is successfully saved\n * @prop {String} fullName - Full name of metadata object\n * @prop {Boolean} created - True if metadata is newly created\n */\n\n/**\n * @private\n */\nfunction convertToUpsertResult(result) {\n  var upsertResult = convertToSaveResult(result);\n  upsertResult.created = upsertResult.created === 'true';\n  return upsertResult;\n}\n\n/**\n * Synonym of Metadata#create().\n *\n * @method Metadata#createSync\n * @param {String} type - The type of metadata to create\n * @param {Metadata~MetadataInfo|Array.<Metadata~MetadataInfo>} metadata - Metadata to create\n * @param {Callback.<Metadata~SaveResult|Array.<Metadata~SaveResult>>} [callback] - Callback function\n * @returns {Promise.<Metadata~SaveResult|Array.<Metadata~SaveResult>>}\n */\n/**\n * Synchronously adds one or more new metadata components to the organization.\n *\n * @method Metadata#create\n * @param {String} type - The type of metadata to create\n * @param {Metadata~MetadataInfo|Array.<Metadata~MetadataInfo>} metadata - Metadata to create\n * @param {Callback.<Metadata~SaveResult|Array.<Metadata~SaveResult>>} [callback] - Callback function\n * @returns {Promise.<Metadata~SaveResult|Array.<Metadata~SaveResult>>}\n */\nMetadata.prototype.createSync =\nMetadata.prototype.create = function(type, metadata, callback) {\n  var convert = function(md) {\n    md[\"@xsi:type\"] = type;\n    return md;\n  };\n  var isArray = _.isArray(metadata);\n  metadata = isArray ? _.map(metadata, convert) : convert(metadata);\n  return this._invoke(\"createMetadata\", { metadata: metadata }).then(function(results) {\n    return _.isArray(results) ? _.map(results, convertToSaveResult) : convertToSaveResult(results);\n  }).thenCall(callback);\n};\n\n/**\n * @private\n */\nfunction convertToMetadataInfo(rec) {\n  var metadataInfo = _.clone(rec);\n  delete metadataInfo.$;\n  return metadataInfo;\n}\n\n/**\n * Synonym of Metadata#read()\n *\n * @method Metadata#readSync\n * @param {String} type - The type of metadata to read\n * @param {String|Array.<String>} fullNames - full name(s) of metadata objects to read\n * @param {Callback.<Metadata~MetadataInfo|Array.<Metadata~MetadataInfo>>} [callback] - Callback function\n * @returns {Promise.<Array.<Metadata~MetadataInfo|Array.<Metadata~MetadataInfo>>>}\n */\n/**\n * Synchronously read specified metadata components in the organization.\n *\n * @method Metadata#read\n * @param {String} type - The type of metadata to read\n * @param {String|Array.<String>} fullNames - full name(s) of metadata objects to read\n * @param {Callback.<Metadata~MetadataInfo|Array.<Metadata~MetadataInfo>>} [callback] - Callback function\n * @returns {Promise.<Array.<Metadata~MetadataInfo|Array.<Metadata~MetadataInfo>>>}\n */\nMetadata.prototype.readSync =\nMetadata.prototype.read = function(type, fullNames, callback) {\n  return this._invoke(\"readMetadata\", { type: type, fullNames: fullNames }).then(function(res) {\n    return _.isArray(res.records) ? _.map(res.records, convertToMetadataInfo) : convertToMetadataInfo(res.records);\n  }).thenCall(callback);\n};\n\n/**\n * @typedef {Object} Metadata~UpdateMetadataInfo\n * @prop {String} currentName - The API name of the component or field before the update\n * @prop {Metadata~MetadataInfo} metadata - Full specification of the component or field you wish to update\n */\n\n/**\n * Asynchronously updates one or more metadata components in the organization.\n *\n * @param {String} type - The type of metadata to update\n * @param {Metadata~UpdateMetadataInfo|Array.<Metadata~UpdateMetadataInfo>} updateMetadata - Updating metadata\n * @param {Callback.<Metadata~AsyncResult|Array.<Metadata~AsyncResult>>} [callback] - Callback function\n * @returns {Metadata~AsyncResultLocator}\n */\nMetadata.prototype.updateAsync = function(type, updateMetadata, callback) {\n  if (Number(this._conn.version) > 30) {\n    throw new Error(\"Async metadata CRUD calls are not supported on ver 31.0 or later.\");\n  }\n  var convert = function(umd) {\n    umd.metadata[\"@xsi:type\"] = type;\n    return umd;\n  };\n  var isArray = _.isArray(updateMetadata);\n  updateMetadata = isArray ? _.map(updateMetadata, convert) : convert(updateMetadata);\n  var res = this._invoke(\"update\", { updateMetadata: updateMetadata });\n  return new AsyncResultLocator(this, res, isArray).thenCall(callback);\n};\n\n/**\n * Synonym of Metadata#update().\n *\n * @method Metadata#updateSync\n * @param {String} type - The type of metadata to update\n * @param {Metadata~MetadataInfo|Array.<Metadata~MetadataInfo>} updateMetadata - Updating metadata\n * @param {Callback.<Metadata~SaveResult|Array.<Metadata~SaveResult>>} [callback] - Callback function\n * @returns {Promise.<Metadata~SaveResult|Array.<Metadata~SaveResult>>}\n */\n/**\n * Synchronously updates one or more metadata components in the organization.\n *\n * @method Metadata#update\n * @param {String} type - The type of metadata to update\n * @param {Metadata~MetadataInfo|Array.<Metadata~MetadataInfo>} updateMetadata - Updating metadata\n * @param {Callback.<Metadata~SaveResult|Array.<Metadata~SaveResult>>} [callback] - Callback function\n * @returns {Promise.<Metadata~SaveResult|Array.<Metadata~SaveResult>>}\n */\nMetadata.prototype.updateSync =\nMetadata.prototype.update = function(type, metadata, callback) {\n  var convert = function(md) {\n    md[\"@xsi:type\"] = type;\n    return md;\n  };\n  var isArray = _.isArray(metadata);\n  metadata = isArray ? _.map(metadata, convert) : convert(metadata);\n  return this._invoke(\"updateMetadata\", { metadata: metadata }).then(function(results) {\n    return _.isArray(results) ? _.map(results, convertToSaveResult) : convertToSaveResult(results);\n  }).thenCall(callback);\n};\n\n/**\n * Synonym of Metadata#upsert().\n *\n * @method Metadata#upsertSync\n * @param {String} type - The type of metadata to upsert\n * @param {Metadata~MetadataInfo|Array.<Metadata~MetadataInfo>} metadata - Upserting metadata\n * @param {Callback.<Metadata~UpsertResult|Array.<Metadata~UpsertResult>>} [callback] - Callback function\n * @returns {Promise.<Metadata~UpsertResult|Array.<Metadata~UpsertResult>>}\n */\n/**\n * Upserts one or more components in your organization's data.\n *\n * @method Metadata#upsert\n * @param {String} type - The type of metadata to upsert\n * @param {Metadata~MetadataInfo|Array.<Metadata~MetadataInfo>} metadata - Upserting metadata\n * @param {Callback.<Metadata~UpsertResult|Array.<Metadata~UpsertResult>>} [callback] - Callback function\n * @returns {Promise.<Metadata~UpsertResult|Array.<Metadata~UpsertResult>>}\n */\nMetadata.prototype.upsertSync =\nMetadata.prototype.upsert = function(type, metadata, callback) {\n  var convert = function(md) {\n    md[\"@xsi:type\"] = type;\n    return md;\n  };\n  var isArray = _.isArray(metadata);\n  metadata = isArray ? _.map(metadata, convert) : convert(metadata);\n  return this._invoke(\"upsertMetadata\", { metadata: metadata }).then(function(results) {\n    return _.isArray(results) ? _.map(results, convertToUpsertResult) : convertToUpsertResult(results);\n  }).thenCall(callback);\n};\n\n/**\n * Asynchronously deletes specified metadata components in the organization.\n *\n * @param {String} type - The type of metadata to delete\n * @param {String|Metadata~MetadataInfo|Array.<String>|Array.<Metadata~MetadataInfo>} metadata - The fullName of metadata or metadata info to delete. If it is passed in fullName, the type parameter should not be empty.\n * @param {Callback.<Metadata~AsyncResult|Array.<Metadata~AsyncResult>>} [callback] - Callback function\n * @returns {Metadata~AsyncResultLocator}\n */\nMetadata.prototype.deleteAsync = function(type, metadata, callback) {\n  if (Number(this._conn.version) > 30) {\n    throw new Error(\"Async metadata CRUD calls are not supported on ver 31.0 or later.\");\n  }\n  var convert = function(md) {\n    if (_.isString(md)) {\n      md = { fullName : md };\n    }\n    md[\"@xsi:type\"] = type;\n    return md;\n  };\n  var isArray = _.isArray(metadata);\n  metadata = isArray ? _.map(metadata, convert) : convert(metadata);\n  var res = this._invoke(\"delete\", { metadata: metadata });\n  return new AsyncResultLocator(this, res, isArray).thenCall(callback);\n};\n\n/**\n * Synonym of Metadata#delete().\n *\n * @deprecated\n * @method Metadata#del\n * @param {String} [type] - The type of metadata to delete\n * @param {String|Metadata~MetadataInfo|Array.<String>|Array.<Metadata~MetadataInfo>} metadata - The fullName of metadata or metadata info to delete. If it is passed in fullName, the type parameter should not be empty.\n * @param {Callback.<Metadata~AsyncResult|Array.<Metadata~AsyncResult>>} [callback] - Callback function\n * @returns {Metadata~AsyncResultLocator}\n */\n/**\n * Synonym of Metadata#delete().\n *\n * @method Metadata#deleteSync\n * @param {String} type - The type of metadata to delete\n * @param {String|Array.<String>} fullNames - The fullName of metadata to delete.\n * @param {Callback.<Metadata~SaveResult|Array.<Metadata~SaveResult>>} [callback] - Callback function\n * @returns {Promise.<Metadata~SaveResult|Array.<Metadata~SaveResult>>}\n */\n\n/**\n * Synchronously deletes specified metadata components in the organization.\n *\n * @method Metadata#delete\n * @param {String} type - The type of metadata to delete\n * @param {String|Array.<String>} fullNames - The fullName of metadata to delete.\n * @param {Callback.<Metadata~SaveResult|Array.<Metadata~SaveResult>>} [callback] - Callback function\n * @returns {Promise.<Metadata~SaveResult|Array.<Metadata~SaveResult>>}\n */\nMetadata.prototype.del =\nMetadata.prototype.deleteSync =\nMetadata.prototype[\"delete\"] = function(type, fullNames, callback) {\n  return this._invoke(\"deleteMetadata\", { type: type, fullNames: fullNames }).then(function(results) {\n    return _.isArray(results) ? _.map(results, convertToSaveResult) : convertToSaveResult(results);\n  }).thenCall(callback);\n};\n\n/**\n * Rename fullname of a metadata component in the organization\n *\n * @param {String} type - The type of metadata to delete\n * @param {String} oldFullName - The original fullName of metadata\n * @param {String} newFullName - The new fullName of metadata\n * @param {Callback.<Metadata~SaveResult>} [callback] - Callback function\n * @returns {Promise.<Metadata~SaveResult>}\n */\nMetadata.prototype.rename = function(type, oldFullName, newFullName, callback) {\n  return this._invoke(\"renameMetadata\", { type: type, oldFullName: oldFullName, newFullName: newFullName }).then(function(result) {\n    return convertToSaveResult(result);\n  }).thenCall(callback);\n};\n\n/**\n * Checks the status of asynchronous metadata calls\n *\n * @param {String|Array.<String>} ids - The asynchronous process ID(s)\n * @param {Callback.<Metadata~AsyncResult|Array.<Metadata~AsyncResult>>} [callback] - Callback function\n * @returns {Metadata~AsyncResultLocator}\n */\nMetadata.prototype.checkStatus = function(ids, callback) {\n  var isArray = _.isArray(ids);\n  var res = this._invoke(\"checkStatus\", { asyncProcessId: ids });\n  return new AsyncResultLocator(this, res, isArray).thenCall(callback);\n};\n\n/**\n * @typedef {Object} Metadata~DescribeMetadataResult\n * @prop {Array.<Object>} metadataObjects - One or more metadata components and their attributes\n * @prop {Array.<String>} metadataObjects.childXmlNames - List of child sub-components for this component\n * @prop {String} metadataObjects.directoryName - The name of the directory in the .zip file that contains this component\n * @prop {Boolean} metadataObjects.inFolder - Indicates whether the component is in a folder or not\n * @prop {Boolean} metadataObjects.metaFile - Indicates whether the component requires an accompanying metadata file\n * @prop {String} metadataObjects.suffix - The file suffix for this component\n * @prop {String} metadataObjects.xmlName - The name of the root element in the metadata file for this component\n * @prop {String} organizationNamespace - The namespace of the organization\n * @prop {Boolean} partialSaveAllowed - Indicates whether rollbackOnError is allowed or not\n * @prop {Boolean} testRequired - Indicates whether tests are required or not\n */\n\n/**\n * Retrieves the metadata which describes your organization, including Apex classes and triggers,\n * custom objects, custom fields on standard objects, tab sets that define an app,\n * and many other components.\n *\n * @param {String} [version] - The API version for which you want metadata; for example, 29.0\n * @param {Callback.<Metadata~DescribeMetadataResult>} [callback] - Callback function\n * @returns {Promise.<Metadata~DescribeMetadataResult>}\n */\nMetadata.prototype.describe = function(version, callback) {\n  if (!_.isString(version)) {\n    callback = version;\n    version = this._conn.version;\n  }\n  return this._invoke(\"describeMetadata\", { asOfVersion: version }).then(function(res) {\n    res.metadataObjects = _.isArray(res.metadataObjects) ? res.metadataObjects : [ res.metadataObjects ];\n    res.metadataObjects = _.map(res.metadataObjects, function(mo) {\n      if (mo.childXmlNames) {\n        mo.childXmlNames = _.isArray(mo.childXmlNames) ? mo.childXmlNames: [ mo.childXmlNames ];\n      }\n      mo.inFolder = mo.inFolder === 'true';\n      mo.metaFile = mo.metaFile === 'true';\n      return mo;\n    });\n    res.partialSaveAllowed = res.partialSaveAllowed === 'true';\n    res.testRequired = res.testRequired === 'true';\n    return res;\n  }).thenCall(callback);\n};\n\n/**\n * @typedef {Object} Metadata~ListMetadataQuery\n * @prop {String} type - The metadata type, such as CustomObject, CustomField, or ApexClass\n * @prop {String} [folder] - The folder associated with the component.\n */\n\n/**\n * @typedef {Object} Metadata~FileProperties\n * @prop {String} type - The metadata type, such as CustomObject, CustomField, or ApexClass\n * @prop {String} createdById - ID of the user who created the file\n * @prop {String} createdByName - Name of the user who created the file\n * @prop {String} createdDate - Date and time when the file was created\n * @prop {String} fileName - Name of the file\n * @prop {String} fullName - The file developer name used as a unique identifier for API access\n * @prop {String} id - ID of the file\n * @prop {String} lastModifiedById - ID of the user who last modified the file\n * @prop {String} lastModifiedByName - Name of the user who last modified the file\n * @prop {String} lastModifiedDate - Date and time that the file was last modified\n * @prop {String} [manageableState] - Indicates the manageable state of the specified component if it is contained in a package\n * @prop {String} [namespacePrefix] - The namespace prefix of the component\n */\n\n/**\n * Retrieves property information about metadata components in your organization\n *\n * @param {Metadata~ListMetadataQuery|Array.<Metadata~ListMetadataQuery>} queries - The criteria object(s) specifing metadata to list\n * @param {String} [version] - The API version for which you want metadata; for example, 29.0\n * @param {Callback.<Array.<Metadata~FileProperties>>} [callback] - Callback function\n * @returns {Promise.<Array.<Metadata~FileProperties>>}\n */\nMetadata.prototype.list = function(queries, version, callback) {\n  if (!_.isString(version)) {\n    callback = version;\n    version = this._conn.version;\n  }\n  if (!_.isArray(queries)) {\n    queries = [ queries ];\n  }\n  return this._invoke(\"listMetadata\", { queries: queries, asOfVersion: version }, callback);\n};\n\n/**\n * @typedef {Object} Metadata~RetrieveRequest\n */\n\n/**\n * Retrieves XML file representations of components in an organization\n *\n * @param {Metadata~RetrieveRequest} request - Options for determining which packages or files are retrieved\n * @param {Callback.<Metadata~AsyncResult>} [callback] - Callback function\n * @returns {Metadata~RetrieveResultLocator}\n */\nMetadata.prototype.retrieve = function(request, callback) {\n  var res = this._invoke(\"retrieve\", { request: request });\n  return new RetrieveResultLocator(this, res).thenCall(callback);\n};\n\n/**\n * Checks the status of declarative metadata call retrieve() and returns the zip file contents\n *\n * @param {String} id - Async process id returned from previous retrieve request\n * @param {Callback.<Metadata~RetrieveResult>} [callback] - Callback function\n * @returns {Promise.<Metadata~RetrieveResult>}\n */\nMetadata.prototype.checkRetrieveStatus = function(id, callback) {\n  return this._invoke(\"checkRetrieveStatus\", { asyncProcessId: id }, callback);\n};\n\n/**\n * Deploy components into an organization using zipped file representations\n *\n * @param {stream.Stream|Buffer|String} zipInput - Zipped file input source in readable stream, binary buffer or Base64-encoded string\n * @param {Object} [options] - Options used in deployment\n * @param {Boolean} [options.allowMissingFiles] - Specifies whether a deploy succeeds even if files that are specified in package.xml but are not in the .zip file or not.\n * @param {Boolean} [options.autoUpdatePackage] - If a file is in the .zip file but not specified in package.xml, specifies whether the file should be automatically added to the package or not.\n * @param {Boolean} [options.checkOnly] - Indicates whether Apex classes and triggers are saved to the organization as part of the deployment (false) or not (true).\n * @param {Boolean} [options.ignoreWarnings] - Indicates whether a warning should allow a deployment to complete successfully (true) or not (false). Defaults to false.\n * @param {Boolean} [options.performRetrieve] - Indicates whether a retrieve() call is performed immediately after the deployment (true) or not (false).\n * @param {Boolean} [options.purgeOnDelete] - If true, the deleted components in the destructiveChanges.xml manifest file aren't stored in the Recycle Bin.\n * @param {Boolean} [options.rollbackOnError] - Indicates whether any failure causes a complete rollback (true) or not (false).\n * @param {Boolean} [options.runAllTests] - If true, all Apex tests defined in the organization are run.\n * @param {Array.<String>} [options.runTests] - A list of Apex tests to be run during deployment.\n * @param {Boolean} [options.singlePackage] - Indicates whether the specified .zip file points to a directory structure with a single package (true) or a set of packages (false).\n * @param {Callback.<Metadata~AsyncResult>} [callback] - Callback function\n * @returns {Metadata~DeployResultLocator}\n */\nMetadata.prototype.deploy = function(zipInput, options, callback) {\n  if (!options || _.isFunction(options)) {\n    callback = options;\n    options = {};\n  }\n  var deferred = Promise.defer();\n  if (_.isObject(zipInput) && _.isFunction(zipInput.pipe)) {\n    var bufs = [];\n    zipInput.on('data', function(d) {\n      bufs.push(d);\n    });\n    zipInput.on('end', function() {\n      deferred.resolve(Buffer.concat(bufs).toString('base64'));\n    });\n    // zipInput.resume();\n  } else if (zipInput instanceof Buffer) {\n    deferred.resolve(zipInput.toString('base64'));\n  } else if (zipInput instanceof String || typeof zipInput === 'string') {\n    deferred.resolve(zipInput);\n  } else {\n    throw \"Unexpected zipInput type\";\n  }\n\n  var self = this;\n  var res = deferred.promise.then(function(zipContentB64) {\n    return self._invoke(\"deploy\", {\n      ZipFile: zipContentB64,\n      DeployOptions: options\n    }, callback);\n  });\n  return new DeployResultLocator(this, res).thenCall(callback);\n};\n\n/**\n * Checks the status of declarative metadata call deploy()\n *\n * @param {String} id - Async process id returned from previous deploy request\n * @param {Boolean} [includeDetails] - Sets the DeployResult object to include details information (default: false)\n * @param {Callback.<Metadata~DeployResult>} [callback] - Callback function\n * @returns {Promise.<Metadata~DeployResult>}\n */\nMetadata.prototype.checkDeployStatus = function(id, includeDetails, callback) {\n  if (_.isObject(includeDetails) || _.isBoolean(includeDetails)) {\n    includeDetails = !!includeDetails;\n  } else {\n    callback = includeDetails;\n    includeDetails = false;\n  }\n  return this._invoke(\"checkDeployStatus\", {\n    asyncProcessId: id,\n    includeDetails : includeDetails\n  }).then(function(res) {\n    res.done = res.done === 'true';\n    res.success = res.success === 'true';\n    res.checkOnly = res.checkOnly === 'true';\n    if (res.ignoreWarnings) {\n      res.ignoreWarnings = res.ignoreWarnings === 'true';\n    }\n    if (res.rollbackOnError) {\n      res.rollbackOnError = res.rollbackOnError === 'true';\n    }\n    res.numberComponentErrors = Number(res.numberComponentErrors);\n    res.numberComponentsDeployed = Number(res.numberComponentsDeployed);\n    res.numberComponentsTotal = Number(res.numberComponentsTotal);\n    res.numberTestErrors = Number(res.numberTestErrors);\n    res.numberTestsCompleted = Number(res.numberTestsCompleted);\n    res.numberTestsTotal = Number(res.numberTestsTotal);\n\n    return res;\n  }).thenCall(callback);\n};\n\n\n/*--------------------------------------------*/\n\n/**\n * @typedef {Object} Metadata~AsyncResult\n * @prop {Boolean} done - Indicates whether the call has completed or not\n * @prop {String} id - ID of the component being created, updated, deleted, deployed, or retrieved\n * @prop {String} state - The state four possible values: Queued, InProgress, Completed, and Error.\n * @prop {String} [statusCode] - If an error occurred during the create(), update(), or delete() call, a status code is returned\n * @prop {String} [message] - Message corresponding to the statusCode field returned\n */\n\n/**\n * The locator class for Metadata API asynchronous call result\n *\n * @protected\n * @class Metadata~AsyncResultLocator\n * @extends events.EventEmitter\n * @implements Promise.<Metadata~AsyncResult|Array.<Metadata~AsyncResult>>\n * @param {Metadata} meta - Metadata API object\n * @param {Promise.<Metadata~AsyncResult|Array.<Metadata~AsyncResult>>} results - Promise object for async result info\n * @param {Boolean} [isArray] - Indicates whether the async request is given in array or single object\n */\nvar AsyncResultLocator = function(meta, results, isArray) {\n  this._meta = meta;\n  this._results = results;\n  this._isArray = isArray;\n};\n\ninherits(AsyncResultLocator, events.EventEmitter);\n\n/**\n * Promise/A+ interface\n * http://promises-aplus.github.io/promises-spec/\n *\n * Delegate to deferred promise, return promise instance for batch result\n *\n * @method Metadata~AsyncResultLocator#then\n */\nAsyncResultLocator.prototype.then = function(onResolve, onReject) {\n  var self = this;\n  return this._results.then(function(results) {\n    var convertType = function(res) {\n      if (res.$ && res.$[\"xsi:nil\"] === 'true') {\n        return null;\n      }\n      res.done = res.done === 'true';\n      return res;\n    };\n    results = _.isArray(results) ? _.map(results, convertType) : convertType(results);\n    if (self._isArray && !_.isArray(results)) {\n      results = [ results ];\n    }\n    return onResolve(results);\n  }, onReject);\n};\n\n/**\n * Promise/A+ extension\n * Call \"then\" using given node-style callback function\n *\n * @method Metadata~AsyncResultLocator#thenCall\n */\nAsyncResultLocator.prototype.thenCall = function(callback) {\n  return _.isFunction(callback) ? this.then(function(res) {\n    process.nextTick(function() {\n      callback(null, res);\n    });\n  }, function(err) {\n    process.nextTick(function() {\n      callback(err);\n    });\n  }) : this;\n};\n\n/**\n * Check the status of async request\n *\n * @method Metadata~AsyncResultLocator#check\n * @param {Callback.<Metadata~AsyncResult|Array.<Metadata~AsyncResult>>} [callback] - Callback function\n * @returns {Promise.<Metadata~AsyncResult|Array.<Metadata~AsyncResult>>}\n */\nAsyncResultLocator.prototype.check = function(callback) {\n  var self = this;\n  var meta = this._meta;\n  return this.then(function(results) {\n    var ids = _.isArray(results) ? _.map(results, function(res){ return res.id; }) : results.id;\n    self._ids = ids;\n    return meta.checkStatus(ids);\n  }).thenCall(callback);\n};\n\n/**\n * Polling until async call status becomes complete or error\n *\n * @method Metadata~AsyncResultLocator#poll\n * @param {Number} interval - Polling interval in milliseconds\n * @param {Number} timeout - Polling timeout in milliseconds\n */\nAsyncResultLocator.prototype.poll = function(interval, timeout) {\n  var self = this;\n  var startTime = new Date().getTime();\n  var poll = function() {\n    var now = new Date().getTime();\n    if (startTime + timeout < now) {\n      var errMsg = \"Polling time out.\";\n      if (self._ids) {\n        errMsg += \" Process Id = \" + self._ids;\n      }\n      self.emit('error', new Error(errMsg));\n      return;\n    }\n    self.check().then(function(results) {\n      var done = true;\n      var resultArr = _.isArray(results) ? results : [ results ];\n      for (var i=0, len=resultArr.length; i<len; i++) {\n        var result = resultArr[i];\n        if (result && !result.done) {\n          self.emit('progress', result);\n          done = false;\n        }\n      }\n      if (done) {\n        self.emit('complete', results);\n      } else {\n        setTimeout(poll, interval);\n      }\n    }, function(err) {\n      self.emit('error', err);\n    });\n  };\n  setTimeout(poll, interval);\n};\n\n/**\n * Check and wait until the async requests become in completed status\n *\n * @method Metadata~AsyncResultLocator#complete\n * @param {Callback.<Metadata~AsyncResult|Array.<Metadata~AsyncResult>>} [callback] - Callback function\n * @returns {Promise.<Metadata~AsyncResult|Array.<Metadata~AsyncResult>>}\n */\nAsyncResultLocator.prototype.complete = function(callback) {\n  var deferred = Promise.defer();\n  this.on('complete', function(results) {\n    deferred.resolve(results);\n  });\n  this.on('error', function(err) {\n    deferred.reject(err);\n  });\n  var meta = this._meta;\n  this.poll(meta.pollInterval, meta.pollTimeout);\n  return deferred.promise.thenCall(callback);\n};\n\n/*--------------------------------------------*/\n/**\n * The locator class to track retreive() Metadata API call result\n *\n * @protected\n * @class Metadata~RetrieveResultLocator\n * @extends Metadata~AsyncResultLocator\n * @param {Metadata} meta - Metadata API object\n * @param {Promise.<Metadata~AsyncResult>} result - Promise object for async result of retrieve call()\n */\nvar RetrieveResultLocator = function(meta, result) {\n  RetrieveResultLocator.super_.call(this, meta, result);\n};\n\ninherits(RetrieveResultLocator, AsyncResultLocator);\n\n/**\n * @typedef {Object} Metadata~RetrieveResult\n * @prop {Array.<Metadata~FileProperties>} fileProperties - Contains information about the properties of each component in the .zip file, and the manifest file package.xml\n * @prop {String} id - ID of the component being retrieved\n * @prop {Array.<Object>} messages - Contains information about the success or failure of the retrieve() call\n * @prop {String} zipFile - The zip file returned by the retrieve request. Base 64-encoded binary data\n */\n\n/**\n * Check and wait until the async request becomes in completed status,\n * and retrieve the result data.\n *\n * @memthod Metadata~RetrieveResultLocator#complete\n * @param {Callback.<Metadata~RetrieveResult>} [callback] - Callback function\n * @returns {Promise.<Metadata~RetrieveResult>}\n */\nRetrieveResultLocator.prototype.complete = function(callback) {\n  var meta = this._meta;\n  return RetrieveResultLocator.super_.prototype.complete.call(this).then(function(result) {\n    return meta.checkRetrieveStatus(result.id);\n  }).thenCall(callback);\n};\n\n/**\n * Change the retrieved result to Node.js readable stream\n *\n * @method Metadata~RetrieveResultLocator#stream\n * @returns {stream.Readable}\n */\nRetrieveResultLocator.prototype.stream = function() {\n  var self = this;\n  var resultStream = new stream.Readable();\n  var reading = false;\n  resultStream._read = function() {\n    if (reading) { return; }\n    reading = true;\n    self.complete(function(err, result) {\n      if (err) {\n        resultStream.emit('error', err);\n      } else {\n        resultStream.push(new Buffer(result.zipFile, 'base64'));\n        resultStream.push(null);\n      }\n    });\n  };\n  return resultStream;\n};\n\n/*--------------------------------------------*/\n/**\n * The locator class to track deploy() Metadata API call result\n *\n * @protected\n * @class Metadata~DeployResultLocator\n * @extends Metadata~AsyncResultLocator\n * @param {Metadata} meta - Metadata API object\n * @param {Promise.<Metadata~AsyncResult>} result - Promise object for async result of deploy() call\n */\nvar DeployResultLocator = function(meta, result) {\n  DeployResultLocator.super_.call(this, meta, result);\n};\n\ninherits(DeployResultLocator, AsyncResultLocator);\n\n/**\n * @typedef {Object} Metadata~DeployResult\n * @prop {String} id - ID of the component being deployed\n * @prop {Boolean} checkOnly - Indicates whether this deployment is being used to check the validity of the deployed files without making any changes in the organization or not\n * @prop {String} completedDate - Timestamp for when the deployment process ended\n * @prop {String} createdDate - Timestamp for when the deploy() call was received\n * @prop {Array.<Object>} [details] - Provides the details of a deployment that is in-progress or ended, if includeDetails is set to true in checkDeployStatus() call\n * @prop {Boolean} done - Indicates whether the server finished processing the deploy() call for the specified id\n * @prop {String} [errorMessage] - Message corresponding to the values in the errorStatusCode field\n * @prop {String} [errorStatusCode] - If an error occurred during the deploy() call, a status code is returned, and the message corresponding to the status code is returned in the errorMessagefield\n * @prop {Boolean} [ignoreWarnings] - Specifies whether a deployment should continue even if the deployment generates warnings\n * @prop {String} lastModifiedDate - Timestamp of the last update for the deployment process\n * @prop {Number} numberComponentErrors - The number of components that generated errors during this deployment\n * @prop {Number} numberComponentsDeployed - The number of components deployed in the deployment process\n * @prop {Number} numberComponentsTotal - The total number of components in the deployment\n * @prop {Number} numberTestErrors - The number of Apex tests that have generated errors during this deployment\n * @prop {Number} numberTestsCompleted - The number of completedApex tests for this deployment\n * @prop {Number} numberTestsTotal - The total number of Apex tests for this deployment\n * @prop {Boolean} [rollbackOnError] - Indicates whether any failure causes a complete rollback or not. Default is true.\n * @prop {String} startDate - Timestamp for when the deployment process began\n * @prop {String} status - Indicates the current state of the deployment\n * @prop {Boolean} success - Indicates whether the deployment was successful or not\n */\n\n/**\n * Check and wait until the async request becomes in completed status,\n * and retrieve the result data.\n *\n * @method Metadata~DeployResultLocator#complete\n * @param {Callback.<Metadata~DeployResult>} [callback] - Callback function\n * @returns {Promise.<Metadata~DeployResult>}\n */\nDeployResultLocator.prototype.complete = function(includeDetails, callback) {\n  if (_.isFunction(includeDetails)) {\n    callback = includeDetails;\n    includeDetails = false;\n  }\n  var meta = this._meta;\n  return DeployResultLocator.super_.prototype.complete.call(this).then(function(result) {\n    return meta.checkDeployStatus(result.id, includeDetails);\n  }).thenCall(callback);\n};\n\n\n/*--------------------------------------------*/\n/*\n * Register hook in connection instantiation for dynamically adding this API module features\n */\njsforce.on('connection:new', function(conn) {\n  conn.metadata = new Metadata(conn);\n});\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n"]}